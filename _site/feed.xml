<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://gelato7673.github.io/myblog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://gelato7673.github.io/myblog/" rel="alternate" type="text/html" /><updated>2020-11-11T14:37:41+09:00</updated><id>https://gelato7673.github.io/myblog/feed.xml</id><entry><title type="html">[trend search] 한 주간 개발과 관련된 내용을 모아서 정리해보자</title><link href="https://gelato7673.github.io/myblog/2020/11/10/trend.html" rel="alternate" type="text/html" title="[trend search] 한 주간 개발과 관련된 내용을 모아서 정리해보자" /><published>2020-11-10T00:00:00+09:00</published><updated>2020-11-10T00:00:00+09:00</updated><id>https://gelato7673.github.io/myblog/2020/11/10/trend</id><content type="html" xml:base="https://gelato7673.github.io/myblog/2020/11/10/trend.html">&lt;h3 id=&quot;기억에-남는-youtube-or-posting&quot;&gt;기억에 남는 youtube or posting&lt;/h3&gt;
&lt;h4 id=&quot;goodbye-j-query&quot;&gt;goodbye j-Query&lt;/h4&gt;
&lt;p&gt;처음 퍼블리싱을 배울 때만해도, j-Query가 괜찮았었는데 ㅎㅎ 어느덧 뒤안길로 밀려나고 있다는 사실이 약간 씁쓸하기도 하고, 기술이란 이런건가 싶기도 하고. 그런 심경이 들었다. 어쩄든 한 동안은 잘썼고, 이래저래 편리한 점이 많기도 하지만. j-query만 쓰게되면 javascript 공부를 소홀히 하게 될 수도 있다는 점에 동감한다. 정말이지 계속 성장하는 개발자가 된다는 것은 힘들다는 생각 등을 하면서..&lt;/p&gt;

&lt;h4 id=&quot;nlp-자연어-처리&quot;&gt;NLP 자연어 처리&lt;/h4&gt;
&lt;p&gt;나는 자연어 처리와 검색시스템에 전부터 관심을 가지고 있었다. 그냥, 늘 관심이 있다. 일단 내 현업에서 써야 하는걸 배우느 라고 자꾸만 뒤로 밀려나는 기분이 들어서 좀 그렇지만. 어쟀든 관심은 있으니까 늘 리스트에는 올라와 있는 그런 기분이다. 
간단히 php로 해서 NLP API를 만드는 그런 과정 이었는데, 꽤나 흥미로웠다.&lt;/p&gt;</content><author><name></name></author><category term="githubpage" /><summary type="html">기억에 남는 youtube or posting goodbye j-Query 처음 퍼블리싱을 배울 때만해도, j-Query가 괜찮았었는데 ㅎㅎ 어느덧 뒤안길로 밀려나고 있다는 사실이 약간 씁쓸하기도 하고, 기술이란 이런건가 싶기도 하고. 그런 심경이 들었다. 어쩄든 한 동안은 잘썼고, 이래저래 편리한 점이 많기도 하지만. j-query만 쓰게되면 javascript 공부를 소홀히 하게 될 수도 있다는 점에 동감한다. 정말이지 계속 성장하는 개발자가 된다는 것은 힘들다는 생각 등을 하면서..</summary></entry><entry><title type="html">[book] Doit! 웹 프로그래밍을 위한 자바스크립트 기본편</title><link href="https://gelato7673.github.io/myblog/2020/11/07/check-book-doitjavascript.html" rel="alternate" type="text/html" title="[book] Doit! 웹 프로그래밍을 위한 자바스크립트 기본편" /><published>2020-11-07T00:00:00+09:00</published><updated>2020-11-07T00:00:00+09:00</updated><id>https://gelato7673.github.io/myblog/2020/11/07/check-book-doitjavascript</id><content type="html" xml:base="https://gelato7673.github.io/myblog/2020/11/07/check-book-doitjavascript.html">&lt;h3 id=&quot;책소개&quot;&gt;책소개&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;책 제목 : Doit! 웹 프로그래밍을 위한 자바스크립트 기본편&lt;/li&gt;
  &lt;li&gt;지은이 : 고경희&lt;/li&gt;
  &lt;li&gt;출판사 : 이지스퍼블리싱&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Javascript API를 사용하거나, 홈페이지 속 Componenet를 만들어 본 경험도 많이 있지만, 그래도 한번쯤 Javascript를 다시 한번 정리해 보고 싶었던 것 같다. 과거에 Javascript와 관련해서 head first 책이나, 다른 책들도 읽어본 적이 있었는데 그 당시에는 언어에 관련된 설명 (변수 설정하는법, if문 등등..) 이 주된 내용이어서, 그보다는 좀더 실무적인 내용이 많았으면 좋겠다고 생각 했었는데, 이 책은 가볍게 이론도 정리해 주면서 실무에서 많이 쓰이는 용법과 내용도 함께 담고 있어서, 한번쯤 그동안 썼던 Javascript를 정리하기에 좋은 기회가 되었다.&lt;/p&gt;

&lt;p&gt;처음 책을 사서 펼쳤을때, ES5로 설명되어있다고 해서 조금.. 내가 원한것과는 다른데? 라고 생각했었다. (나는 ES6로 자바스크립트를 다시 한번 정리하고 싶은 마음이 컸기에 최근 출간된 책을 다시 산건데..) 그러나, 중요 개념을 설명한 다음에 밑에 ES6로 변경하여 구현할때의 문법을 함께 정리해 주어서 읽고나서는 만족스러웠던 책이었다.&lt;/p&gt;

&lt;p&gt;특히, 이 책은 실제로 홈페이지 제작시에 자주 사용되는 component들을 실습 과제로 설정해 두고, 설명해 주는 부분이 많아서 이 책으로 입문하신다면 실무에서 매우 유용하리라는 생각이 들었다. 
사실, 만들어 보는 것만큼 유용한 것이 어디있으랴. 그런 부분에서 실습과제와 설명의 양의 배치가 적절하다는 느낌(!) 이었던 것 같다. ^^&lt;/p&gt;

&lt;p&gt;이 책의 장점을 한번에 요약하면 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;이론을 간편하게 정리할 수 있다. (350페이지 미만)&lt;/li&gt;
  &lt;li&gt;ES5로 쓰여졌으나, 중요한 ES6문법은 함께 정리해 준다.&lt;/li&gt;
  &lt;li&gt;기본적인 내용만 있지않고, 실무에서 많이 쓰이는 event나 form, Dom, BOM에 관한 내용도 반 정도 차지하고 있다는 점이 특히 좋았다.&lt;/li&gt;
  &lt;li&gt;실제로 component를 만드는 실습과제가 많이 있어서 좋다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;이벤트-캡처링과-버블링&quot;&gt;이벤트 캡처링과 버블링&lt;/h4&gt;

&lt;p&gt;addEventListenr 함수에 관해 설명하면서, 이벤트 캡처링 여부를 지정할 수 있다고 나와있다. 
책에는 간단히 이벤트 캡처링은 ‘부모 노드에서 자식 노드로 이벤트가 전달되는 것’ 이고,
이벤트 버블링은 ‘자식 노드에서 부모 노드로 이벤트가 전달되는 것’이라고 설명되어있다. Javascript에서 뭔가 잘 안된다면 callback 과 이벤트일 확률이 꽤 있었기에, 여기에 좀 더 자세한 글들을 링크해 두고 싶다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ko.javascript.info/bubbling-and-capturing&quot;&gt;‘JAVASCRIPT.INFO 사이트의 버블링과 캡처링’&lt;/a&gt; 이라는 글이다.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://joshua1988.github.io/web-development/javascript/event-propagation-delegation/&quot;&gt;‘CAPTAIN PANGYO 님의 이벤트관련 글’&lt;/a&gt; 이 블로그는 우연히 찾게 되었는데, 지금 보니까 이 다음에 읽으려고 하는 Do it Vue.js 저자 이신듯. 블로그가 상당히 깔끔하다는 느낌을 받을 수 있다.&lt;/li&gt;
  &lt;li&gt;이렇게 문득 event에 대해서 알아보다가 불현듯 기억난 이전 코드 ㅎㅎ&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;j-query로 이 코드 안써본 사람 없을 것 같았다. ㅎㅎ 여기서 e가 무슨 의미가 있는지 궁금했었는데, 그냥 매개변수 였다. 나 말고도 이거에 대해 궁금해 하는 사람이 많은 것 같다. 질문과 답변 링크가 있길래 걸어둔다.
&lt;a href=&quot;https://qastack.kr/programming/10323392/in-javascript-jquery-what-does-e-mean&quot;&gt;qstack 사이트에서 ‘Javascript / jQuery에서 (e)는 무엇을 의미합니까?’ 라는 글&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;visual-studio-code&quot;&gt;visual studio code&lt;/h4&gt;
&lt;p&gt;이번에 사용한 IDE는 visual studio code 이다. visual studio code가 나온지는 꽤 되었는데, 이전에 한번 사용해 보고 오랜만에 다시 다운받아서 사용해 본 것 같다. UI/UX 의 느낌은 여전히 visual studio 다웠고 ^^ㅋㅋ (아마, 뭔가 딱딱한듯, 섬세한 그 visual studio만의 감성적인 감성..Microsoft감성인가.. 나만 느끼나..) 음. 편리하기도 했고, 무엇보다 visual studio 처럼 보이지만 라이트 하다는 것이 가장 큰 장점이 아닌가 싶다. ^^&lt;/p&gt;

&lt;h4 id=&quot;github-repository&quot;&gt;github repository&lt;/h4&gt;
&lt;p&gt;이 책의 실습파일들은 모두 github repository에 올라가 있어서 clone하여 사용 하면 된다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;original repository : &lt;a href=&quot;github.com/funnycom/js-basic-book&quot;&gt;github.com/funnycom/js-basic-book&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;mygithub repository : &lt;a href=&quot;https://github.com/Gelato7673/js-basic-book&quot;&gt;https://github.com/Gelato7673/js-basic-book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기억에-남는-한줄&quot;&gt;기억에 남는 한줄&lt;/h3&gt;
&lt;p&gt;책 앞장에 써있는 글이 특히 기억에 남아서 여기에 적어두려고 한다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;진짜 어려움은 극복할 수 있다. 정복할 수 없는 것은 상상 속의 어려움뿐이다. -시어도어 N.베일
Real difficulties can be overcome; it is only the imaginary ones that are unconquerable. -Theodore N.Vail&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="javascript" /><summary type="html">책소개 책 제목 : Doit! 웹 프로그래밍을 위한 자바스크립트 기본편 지은이 : 고경희 출판사 : 이지스퍼블리싱</summary></entry><entry><title type="html">[trend search]2020. 11. 5주차</title><link href="https://gelato7673.github.io/myblog/2020/11/07/check-trend.html" rel="alternate" type="text/html" title="[trend search]2020. 11. 5주차" /><published>2020-11-07T00:00:00+09:00</published><updated>2020-11-07T00:00:00+09:00</updated><id>https://gelato7673.github.io/myblog/2020/11/07/check-trend</id><content type="html" xml:base="https://gelato7673.github.io/myblog/2020/11/07/check-trend.html">&lt;h3 id=&quot;reddit-stack-overflow-facebook-okky&quot;&gt;reddit, stack-overflow, facebook, okky&lt;/h3&gt;
&lt;p&gt;개발을 하면서 stack-overflow 외에 다른 커뮤니티는 그다지 이용할 생각을 하지 못했던 것 같다. 글을 읽는다거나, youtube, 기술 블로그 들을 보면서 기술 동향에 대한 이야기들을 다룬 잘 갖춰진 글들은 읽었지만, 커뮤니티 사이트는 많이 보지 않았던 것 같은데. 이번기회에 한번 둘러 보기로 했다. facebook과 okky는 일반적여서 딱히 이야기 할것은 없을 것 같고, reddidt과 stack-overflow를 위주로 이야기 하려고 한다.&lt;br /&gt;
처음 시작은, 내가 평소에 즐겨 구독하는 개발자 한분이 trend search를 히는 주요 수단으로 reddit을 추천하면서 시작되었다.&lt;/p&gt;

&lt;h4 id=&quot;reddit&quot;&gt;reddit&lt;/h4&gt;
&lt;p&gt;wikipedia의 설명을 빌리자면, reddit에 대한 설명은 다음과 같다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“Reddit is an American social news aggregation, web content rating, and discussion website.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;즉, 인기있는 뉴스나 글들이 순서대로 rating되는 사이트 이다.
영어의 Acronym(두문자어)가 많기 때문에, formal한 글에 비해서 난이도가 있을 수 있다는 점 ^^;;; 그래서, 이것저것 찾아볼 일이 많았다.
&lt;a href=&quot;https://www.youtube.com/watch?v=HmkncW5rktI&quot;&gt;인터넷 용어 설명해 주는 유튜브 ㅋㅋ 그러나 이것만으로는 커버할 수 없다. 그래도 우선 대강 알아듣기 위해 찾아봤다&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;특징적였던 점은, 아무래도 커뮤니티 이다 보니 ‘의견 or 고민(?)’ 같은것을 나누는 분위기라는 점이었다. 물론 홍보 글들도 나름 있겠지만, rating을 많이 받은 글들은 아무래도 가치 있다고 사람들이 느끼는 의견과 고민이 많았던 것 같다.
예를들어, 어떤 기술을 도입해야 하는가? 라는 질문에 있어서, 그 기술에 스팩과 장단점을 봤을때, 도입해도 괜찮다. 안괜찮다. 이런식의 글들이 많은 느낌이었다. 자신의 개발 진로에 관한 글이라던가, 현재 개발의 방향(?) 같은것에 대해 걱정되거나 그런 부분들도 서로 의견을 나누는 토론느낌의 글들이 많아서 흥미로웠다.&lt;/p&gt;

&lt;p&gt;한글 커뮤니티와의 차이점을 나누자면, 한국어로 된 커뮤니티들은 대부분(?) 한국사람들이다 보니, 한국의 개발환경의 현실적인 부분들이 반영된 이야기가 많이 있다고 볼 수 있을 것이다.&lt;/p&gt;

&lt;p&gt;반면, reddit의 경우는 영어를 사용할 수 있는 다양하고 많은 사람들이 모이다 보니, 의견도 다양하고, 폭 넓은 이야기들도 많이 오가는 것 같은 점이 색다른 매력으로 느껴졌다.&lt;/p&gt;

&lt;p&gt;레딧을 어떻게 즐겨야 할지 모르겠다고? reddit의 &lt;a href=&quot;https://www.reddit.com/wiki/reddit_101&quot;&gt;the beginners’ guide to reddit&lt;/a&gt; 을 읽어보자 !! ㅎㅎ&lt;/p&gt;

&lt;h4 id=&quot;stack-overflow&quot;&gt;stack-overflow&lt;/h4&gt;
&lt;p&gt;예전에 stack-overflow는 일부러 찾아가기 보다는 검색하다 보면 항상 나오는 사이트였다. 그런데, 요즘 stack-overflow의 동향을 살피는 것이 꽤 가치 있다는 생각이 든다. 많은 사람들로 부터 질문이 올라 온다는 것은 곧, 그 언어와 프로그래밍 기술이 현재 핫하다는 가장 큰 증거이지 않을까. 매년 stack-overflow를 통해서 가장 많이 사용하는 언어들이 발표되는데, 이것이 의미있는 지표로써 작용한다고 볼 수 있다. 또한, 여기 올라온 글들은 대부분 코드다. 읽고, 답변들을 보는 과정에서 많이 공부가 되고, 혹시 아나.. 읽다보면 내가 답해줄 수 있는 내용이 있어서 답변하는 뿌듯함을 느끼는 날이 올지 ^^;
그런의미에서 이번주에 가입해 보고, 이곳저곳 둘러봤다.
stack overflow 탭 중에서 bountied 라는 탭이 있는데, bountied의 뜻은 ‘장려받은’ 이다. 즉, 추천 수가 많은 질문과 답변이 모여있는 곳이었는데, 꽤 흥미로웠다.&lt;br /&gt;
일단, &lt;a href=&quot;https://stackoverflow.com/tour&quot;&gt;stack-overflow의 tour페이지&lt;/a&gt;를 구경해 보자.
어떻게 글을 올려야 하는건지 모르겠다고? 나무위키에 재치있는 ‘&lt;a href=&quot;https://namu.wiki/w/Stack%20Overflow&quot;&gt;유의점&lt;/a&gt;‘관련 글이 있어서 링크 걸어본다.
stack-overflwo외에도 &lt;a href=&quot;https://stackexchange.com/&quot;&gt;stackExchange&lt;/a&gt;라는 사이트도 있다.&lt;/p&gt;

&lt;p&gt;그럼, stackExchange는 무엇이고, stackOverflow는 무엇일까?
쉽게 말해서, stackoverflow는 stackexchange를 통해서 갈 수 있는 커뮤니티 들 중 하나라고 생각하면 된다.
stack exchange는 많은 커뮤니티 사이트 들을 연결해 주는 하나의 통합 사이트 인데, &lt;a href=&quot;https://stackexchange.com/sites#&quot;&gt;그중 가장 큰 비중을 차지하는 사이트가 바로 stackOverflow이기 때문이다. (이링크를 타고 가면, stackExchange가 연결해주는 모든 사이트를 볼 수 있다.)&lt;/a&gt;이 두 사이트의 비교에 관한 질문은 stackExchange에도 올라와 있고, 다음 &lt;a href=&quot;https://meta.stackexchange.com/questions/79593/what-is-the-difference-between-stack-overflow-and-stack-exchange&quot;&gt;링크를 타고 가면 볼 수있다.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;내가, stack-overflow의 위엄(?)를 느끼는 순간중에 하나는 이 사이트의 &lt;a href=&quot;https://insights.stackoverflow.com/survey&quot;&gt;Annual Developer Survey&lt;/a&gt;를 볼때다. 현재 개발자들의 동향을 볼 수 있으니 참고해볼만 한다.&lt;/p&gt;</content><author><name></name></author><category term="community" /><category term="reddit" /><category term="stack-overflow" /><summary type="html">reddit, stack-overflow, facebook, okky 개발을 하면서 stack-overflow 외에 다른 커뮤니티는 그다지 이용할 생각을 하지 못했던 것 같다. 글을 읽는다거나, youtube, 기술 블로그 들을 보면서 기술 동향에 대한 이야기들을 다룬 잘 갖춰진 글들은 읽었지만, 커뮤니티 사이트는 많이 보지 않았던 것 같은데. 이번기회에 한번 둘러 보기로 했다. facebook과 okky는 일반적여서 딱히 이야기 할것은 없을 것 같고, reddidt과 stack-overflow를 위주로 이야기 하려고 한다. 처음 시작은, 내가 평소에 즐겨 구독하는 개발자 한분이 trend search를 히는 주요 수단으로 reddit을 추천하면서 시작되었다.</summary></entry><entry><title type="html">[강의] Nomad Coders - 바닐라 JS로 크롬 앱 만들기</title><link href="https://gelato7673.github.io/myblog/2020/11/01/check-nomad_javascript.html" rel="alternate" type="text/html" title="[강의] Nomad Coders - 바닐라 JS로 크롬 앱 만들기" /><published>2020-11-01T00:00:00+09:00</published><updated>2020-11-01T00:00:00+09:00</updated><id>https://gelato7673.github.io/myblog/2020/11/01/check-nomad_javascript</id><content type="html" xml:base="https://gelato7673.github.io/myblog/2020/11/01/check-nomad_javascript.html">&lt;h3 id=&quot;nomad-coders&quot;&gt;Nomad coders&lt;/h3&gt;

&lt;p&gt;니콜라스&amp;amp;린 부부가 함께 운영하는 Nomad coders는 Youtube채널과 강의사이트로 운영되고 있다. (아, 슬랙 채널도 있다.) 다양한 방식으로 의견을 주고 받을 수 있고, 최신 업데이트 되는 기술에 관한 내용도 피드 받을 수 있어서 늘 보고 있는 채널&amp;amp;사이트 이다. 
다소 딱딱하게 소개를 했는데, 채널과 사이트는 전혀 딱딱하지 않은 느낌이니 오해 없으시길 ㅎㅎ&lt;/p&gt;

&lt;p&gt;나는 개인적으로 잘 이용하고 있어서 심심한 감사의 인사를 전하고 싶다 :)&lt;/p&gt;

&lt;h4 id=&quot;nomad-coders-youtube&quot;&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCUpJs89fSBXNolQGOYKn0YQ&quot;&gt;Nomad coders “Youtube”&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;일단 채널은 심심할때 보면 좋다. 이 채널의 가장 좋은 점은 무겁지 않다는 데에 있다. 무겁지 않지만, 중요한 것에 대해서는 훓고 지나가니까 보면서 더 관심이 생기면 책을 찾아보거나 전문 기술 사이트들을 들어가서 확인하면 된다. 강의 사이트로 가도 좋고 ~&lt;/p&gt;

&lt;p&gt;얼마전에 j-query에 관한 영상을 봤는데. 정말이지, 나 처음배울때만 해도 j-query없이는 일하기 힘들 만큼 유행중이었다. 지금은 goodbye.. 현업에선 한동안 쓰겠지만.. 영상의 이야기 처럼, 요즘은 javascript의 스펙과 browser의 스펙이 너무 좋아졌기 때문에..안뇽..ㅜㅜ 슬프기도 하고, 새로운 기술에 기쁘기도 하고 ㅎㅎ&lt;/p&gt;

&lt;p&gt;민트초코와 하와이안 피자에 대한 호불호를 조사하는 영상도 재미있게 봤었다 ㅋㅋㅋㅋ (보다가 민초가 먹고 싶어서 나가서 사와 버렸..) NLP에 대해서 관심은 있었으나 다른 할일에 밀려서 잘 알아보지 못 하고 있었는데, NLP관련 구글API를 이용해 twitter를 분석하는 것이 재미있어 보였다.&lt;/p&gt;

&lt;p&gt;그외에도 해킹 영화에 관한 리액션이나 ㅋㅋㅋ 평소 공부하는 방법, 개발자의 하루등 재미있는 영상도 많다 ㅎㅎ&lt;/p&gt;

&lt;h4 id=&quot;nomad-coders-website&quot;&gt;&lt;a href=&quot;https://nomadcoders.co/&quot;&gt;Nomad coders “Website”&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Website의 강의들 역시 그렇게 무겁지는 않은 것 같다. 음.. 내가 들은건 Javascript 강의 뿐이어서 전반적인 강의에 대해 리뷰를 쓰기는 좀 어려울 것 같다.&lt;/p&gt;

&lt;p&gt;그냥, 개인적으로 느낀점을 몇자 적자면…&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;강의가 Clone coding을 위주로 진행된다. 이론적인 설명을 많이하지는 않지만, 중요한 내용은 설명해 주신다. Deep하지 않은것. 그것이 이 강의의 특징이다. (사실 딥한 내용들은 책으로 찾아보는게 더 편한 경우가 많다.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;내가 강의를 들으며 좋았던 점은, 우선 강의가 영어로 진행된다는점 이었다. 기술과 관련된 내용은 영어로 친숙한 것이 좋다. 나중에 기술문서를 볼려고해도 그렇고, 커뮤니티의 글들을 보기에도 그렇다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;또 한가지는, 이미 다 외운 내용으로 강의를 하지 않고, 모를 때 어떻게 찾아가면서 프로그램을 완성하는 모습을 보여준 다는 점이 좋았다. 사실 개발은 배우는 것보다 문제를 해결하기 위한 길을 찾는방법, 그리고 기술을 익히는 방법을 배우는 것이 기술 만큼 중요하다는 생각을 하고있는 요즘이다. :)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;그래서-javascript강의에선-무엇을-배웠는고&quot;&gt;그래서, Javascript강의에선 무엇을 배웠는고?&lt;/h4&gt;
&lt;p&gt;일단 이 강의는 ES6로 강의한다. 그점에서 일단 좋았고, ‘바닐라 자바스크립트를 한동안 많이 안써서 잊어버린 부분이 있다!’ 싶을때 리마인드 하기 좋았다. 처음 배우는 사람도 clone coding으로 재미있게 따라할 수 있을 것 같았다. 마지막 크롬앱 만들기를 아직 좀 덜 진행했는데, 그 부분은 보완해서 만든다음에 따로 관련해서 포스팅 하려고 한다. 기회가 된다면 다음에 다른강의 challeng에 참여해서 함께 만들어 봐도 재미있을 듯 !!&lt;/p&gt;</content><author><name></name></author><category term="javascript" /><summary type="html">Nomad coders</summary></entry><entry><title type="html">하고싶은 프로젝트들 목록</title><link href="https://gelato7673.github.io/myblog/2020/11/01/toyproject.html" rel="alternate" type="text/html" title="하고싶은 프로젝트들 목록" /><published>2020-11-01T00:00:00+09:00</published><updated>2020-11-01T00:00:00+09:00</updated><id>https://gelato7673.github.io/myblog/2020/11/01/toyproject</id><content type="html" xml:base="https://gelato7673.github.io/myblog/2020/11/01/toyproject.html">&lt;h3 id=&quot;해보고-싶은-프로젝트-목록들&quot;&gt;해보고 싶은 프로젝트 목록들&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;생산성 관리툴 (Monday.com) 같은것? : 간트 차트랑, 캘랜더 형식, to-do list 등으로 제공해 주는 기본 생산성 관리툴들&lt;/li&gt;
  &lt;li&gt;프랭클린 다이어리 같은것 말야. (데이터 공간 확보가 애매한데.. 그건 생각을 해보자구.)&lt;/li&gt;
  &lt;li&gt;좌석 배치도 : 코로 나 시대에 쉽게 사용할 수 있는 좌석 배치도를 하나 만들어서 사용해 보고 싶다.&lt;/li&gt;
  &lt;li&gt;간단하게 홈페이지를 만드는 앱을 만들어 보자. (nomad coder에서 말했던것)&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="toyproject," /><category term="sideproject" /><summary type="html">해보고 싶은 프로젝트 목록들 생산성 관리툴 (Monday.com) 같은것? : 간트 차트랑, 캘랜더 형식, to-do list 등으로 제공해 주는 기본 생산성 관리툴들 프랭클린 다이어리 같은것 말야. (데이터 공간 확보가 애매한데.. 그건 생각을 해보자구.) 좌석 배치도 : 코로 나 시대에 쉽게 사용할 수 있는 좌석 배치도를 하나 만들어서 사용해 보고 싶다. 간단하게 홈페이지를 만드는 앱을 만들어 보자. (nomad coder에서 말했던것)</summary></entry><entry><title type="html">공부해서, 써봐야지 하는 일들의 목록</title><link href="https://gelato7673.github.io/myblog/2020/11/01/document.html" rel="alternate" type="text/html" title="공부해서, 써봐야지 하는 일들의 목록" /><published>2020-11-01T00:00:00+09:00</published><updated>2020-11-01T00:00:00+09:00</updated><id>https://gelato7673.github.io/myblog/2020/11/01/document</id><content type="html" xml:base="https://gelato7673.github.io/myblog/2020/11/01/document.html">&lt;h3 id=&quot;나중에-포스팅하고-싶은-내용들&quot;&gt;나중에 포스팅하고 싶은 내용들&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Javascript trend를 봐가면서 해야할지도.&lt;/li&gt;
  &lt;li&gt;vue.js / Typescript&lt;/li&gt;
  &lt;li&gt;React.js / Angular&lt;/li&gt;
  &lt;li&gt;Dependency Manager (npm / gulp / grunt…)&lt;/li&gt;
  &lt;li&gt;Pre-Processor (sass / less…)&lt;/li&gt;
  &lt;li&gt;Phythone 그리고 Django..&lt;/li&gt;
  &lt;li&gt;Node.js 그리고 Angular..&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="front-end," /><category term="javascript," /><category term="dependency-manager" /><summary type="html">나중에 포스팅하고 싶은 내용들 Javascript trend를 봐가면서 해야할지도. vue.js / Typescript React.js / Angular Dependency Manager (npm / gulp / grunt…) Pre-Processor (sass / less…) Phythone 그리고 Django.. Node.js 그리고 Angular..</summary></entry><entry><title type="html">[trend search]2020. 10. 5주차</title><link href="https://gelato7673.github.io/myblog/2020/10/31/check-trend.html" rel="alternate" type="text/html" title="[trend search]2020. 10. 5주차" /><published>2020-10-31T00:00:00+09:00</published><updated>2020-10-31T00:00:00+09:00</updated><id>https://gelato7673.github.io/myblog/2020/10/31/check-trend</id><content type="html" xml:base="https://gelato7673.github.io/myblog/2020/10/31/check-trend.html">&lt;h3 id=&quot;javascript-vuejs-typescript&quot;&gt;Javascript, Vue.js, Typescript&lt;/h3&gt;
&lt;p&gt;Front-end에서 중요한 기술들 3가지에 대해 이것저것 찾아보는 시간을 가졌다.
첫 술에 배부를 생각 말고, 앞으로도 열심히 찾아보고 읽어봐야지..라는 생각을 하면서. ^^;;
이것저것 알아본 내용들을 정리해 본다.&lt;/p&gt;

&lt;h3 id=&quot;javascriptes6와-이후의-발전동향&quot;&gt;Javascript(ES6)와 이후의 발전동향&lt;/h3&gt;

&lt;h4 id=&quot;es6란&quot;&gt;ES6란?&lt;/h4&gt;
&lt;p&gt;ES6는 ECMA Script 6의 줄임말로, 다른이름으로 ECMA Script 2015라는 이름이 있다. 따라서, 2015년에 나왔다.
ES5와 ES6사이에는 꽤 긴 공백이 있었고, ES6가 처음나왔을때 많은 브라우저에서 그 스펙을 뒷받침해 주지 못했다.
그러나, 이후에 개발된 다양한 프레임워크에서 ES6를 채택하였고, 브라우저의 지원율 또한 늘어났다.
그럼, ES6는 무엇이 다를까?&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://es6-features.org/#Constants&quot;&gt;ES6-Features.org 개인적으로 추천! 달라진 코드를 한눈에 비교할 수 있다.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6-Features.org : github repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/&quot;&gt;ECMAScript official website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/mixed/ecmascript2015&quot;&gt;W3C HTML5 Korean Interest Group 에서 진행한 W3C HTML5 KIG 회의 발표자료&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;es6까지의-발전을-기록한-글&quot;&gt;ES6까지의 발전을 기록한 글.&lt;/h4&gt;
&lt;p&gt;Naver D2를 보다가 “ECMAScript 6 에디터이기도 했던 Allen Wirfs-Brock과 Brendan Eich는 매우 간헐적(13~15년 주기)으로 열리는 The History of Programming Languages Conference에서 지난 20년(1995~2015)간의 JavaScript 역사를 다룬 190페이지 분량의 방대한 내용의 문서 JavaScript: the first 20 years를 3년의 작업 시간을 거쳐 완성 후 공개했습니다” 라는 내용을 발견하여서 관련 링크를 따라가 글을 읽어보았다. 이번엔 대강 읽어서 딱히 정리까진 어렵겠지만, 정독해 볼만한 가치가 있는 글 이었다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;링크: &lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/3386327&quot;&gt;JavaScript: the first 20 years - Allen Wirfs-Brock, Brendan Eich&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;es6이후의-발전을-기록한-글&quot;&gt;ES6이후의 발전을 기록한 글.&lt;/h4&gt;
&lt;p&gt;이번에 Javascript에 관한 글을 찾아보면서 Naver D2의 ‘Javascript 동향’관련 글들에서 배울 수 있는 점이 참 많았다.
특히, ‘2020년과 이후 JavaScript의 동향’ 편에서 WEBASSEMBLY의 개념이 잘 정리되어있는데, 많은 도움이 되었다. 이후에 찬찬히 읽어보고 좋은 내용들은 따로 리뷰해야겠다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://d2.naver.com/helloworld/4268738&quot;&gt;2020년과 이후 Javascript의 동향&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://d2.naver.com/helloworld/3618177&quot;&gt;2016년과 이후 Javascript의 동향&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;vuejs&quot;&gt;Vue.js&lt;/h3&gt;
&lt;p&gt;ES6 출시이후 여러 프레임워크가 등장하였다. Angular, React등.. 둘다 학습곡선이 약간 있는데(Angular는 약간은 아닌듯 ^^;), vue.js의 경우 배우기가 일단 매우 쉽다! 화면제어를 위해서 많이 사용된다.
vue.js 홈페이지에 들어가면 따라하면서 쉽게 시작해 볼 수 있다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://vuejs.org/&quot;&gt;https://vuejs.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kr.vuejs.org/v2/guide/index.html&quot;&gt;한글버전 가이드 : https://kr.vuejs.org/v2/guide/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;typescript&quot;&gt;Typescript&lt;/h3&gt;
&lt;p&gt;Microsoft에서 개발한 타입스크립트. JS 가 단순한 기능을 넘어서 서버제어의 영역까지 넘어가면서, 정적 타입 언어가 가지는 안정성이 중시되었다. 이 부분을 보완해 줄 수 있는 것이 Typescript의 장점이라고 생각되어진다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;https://www.typescriptlang.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://namu.wiki/w/TypeScript&quot;&gt;Typescript 나무위키&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hyunseob.github.io/2018/08/12/do-you-need-to-use-ts/&quot;&gt;‘타입스크립트, 써야할까? - HyunSeob’&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@ehddnjs8989/typescript-%ED%95%98%EA%B8%B0-%EC%A0%84%EC%97%90-%EC%9D%B4%EC%A0%95%EB%8F%84%EB%8A%94-%EC%95%8C%EC%95%84%EC%95%BC%EC%A7%80-5179d8269193&quot;&gt;‘TypeScript 하기 전에 이정도는 알아야지! - dongwon kim’ : 타입스크립트의 장점을 잘 설명해 놓은글&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;조사하면서-알게된-용어들&quot;&gt;조사하면서 알게된 용어들&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://webassembly.org/&quot;&gt;WEBASSEMBLY&lt;/a&gt;: WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ykarma1996.tistory.com/72&quot;&gt;크로미움&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;브라우저 벤더란? 브라우저 벤더란 브라우저를 만들거나 파는 회사들&lt;/li&gt;
  &lt;li&gt;MPA : Multi Page Application(MPA)&lt;/li&gt;
  &lt;li&gt;SPA : Single Page Application(SPA)&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="githubpage" /><summary type="html">Javascript, Vue.js, Typescript Front-end에서 중요한 기술들 3가지에 대해 이것저것 찾아보는 시간을 가졌다. 첫 술에 배부를 생각 말고, 앞으로도 열심히 찾아보고 읽어봐야지..라는 생각을 하면서. ^^;; 이것저것 알아본 내용들을 정리해 본다.</summary></entry><entry><title type="html">[book] Doit! 지옥에서 온 문서 관리자 깃&amp;amp;깃허브 입문</title><link href="https://gelato7673.github.io/myblog/2020/10/27/check-book-github.html" rel="alternate" type="text/html" title="[book] Doit! 지옥에서 온 문서 관리자 깃&amp;amp;깃허브 입문" /><published>2020-10-27T00:00:00+09:00</published><updated>2020-10-27T00:00:00+09:00</updated><id>https://gelato7673.github.io/myblog/2020/10/27/check-book-github</id><content type="html" xml:base="https://gelato7673.github.io/myblog/2020/10/27/check-book-github.html">&lt;h3 id=&quot;책소개&quot;&gt;책소개&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;책 제목 : Doit! 지옥에서 온 문서 관리자 깃&amp;amp;깃허브 입문&lt;/li&gt;
  &lt;li&gt;지은이 : 이고잉, 고경희&lt;/li&gt;
  &lt;li&gt;출판사 : 이지스퍼블리싱&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;git과 github에 관한 내용을 전혀 모르는 것은 아니었다. 이전에 프로젝트도 해 본적이 있고 해서..
그렇지만, 시간이 흐르고.. ^^; 이전회사에서는 svn을 더 선호하는 경향이 있어서 개인 프로젝트가 아니면 git을 쓸 일이 많이 없었던 것 같다. 그러다 보니까 가물가물 한 것 같길래, 간단히 쓱 리뷰할 수 있는 책을 한권 구입하고 싶다는 생각이 들었다. 
그러니까, 약간 쿡북같은. 간단히 쓱 리뷰하고, 생각 안날때 찾아볼수 있고, 옆에 놓아둘 수 있는. 
그렇지만 중요한 원리는 잘 설명되어 있길 바라는..(바라는것도 많다.) 뭐 그런 책을 찾고 있었다.&lt;/p&gt;

&lt;p&gt;마침, 그 당시에 생활코딩을 통해서 ‘웹 어플리케이션 만들기’ 프로젝트를 진행하고 있었는데, (사실 이 프로젝트를 진행하면서 역시 개인프로젝트는 뭔가 기록하면서 해야해!! 전에 git을 썼었는데, 기억이 가물가물하네 ㅜㅜ 다시 써봐야겠다!! 이렇게 된것임..tmi) 이 고잉 님의 강의가 만드는 것 자체는 심플하면서(기초에 충실하면서), 중요한 원리는 시간을 들여서 설명해 주는 그런 강의였다. 덕분에, front-end 부분과 back-end부분이 한번에 정리되는 느낌을 이 프로젝트를 통해서 받을 수 있었기  때문에, git강의도 관심이 생긴 찰나였다.&lt;/p&gt;

&lt;p&gt;그런데, 이미 아는 내용이기도 하고.. 강의를 천천히 다 듣고 있기에는 스킵할 부분이 많은것 같고, (원래 전자책 보다 종이 책을 선호하기도 하고), 생활코딩을 늘 잘 사용하니까 후원(?)의 의미도 담아 ㅋㅋㅋ.. 그래서 이 책을 구입하게 된 것이다.&lt;/p&gt;

&lt;p&gt;만약, 책을 사기보다 강의를 선호하는 분이라면 아래 링크에서 바로 생활코딩의 git강의를 들을 수 있다.&lt;br /&gt;
⇒ &lt;a href=&quot;https://opentutorials.org/course/3837&quot;&gt;생활코딩 git강의들으러 바로가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;따라 하면서 이해도 잘되고, 지금도 까먹으면 옆에두고 볼 수 있는 책 ^^!
덕분에 공부 잘했습니다~ !&lt;/p&gt;</content><author><name></name></author><category term="git," /><category term="github" /><summary type="html">책소개 책 제목 : Doit! 지옥에서 온 문서 관리자 깃&amp;amp;깃허브 입문 지은이 : 이고잉, 고경희 출판사 : 이지스퍼블리싱</summary></entry><entry><title type="html">[trend search] 한 주간 개발과 관련된 내용을 모아서 정리해보자</title><link href="https://gelato7673.github.io/myblog/2020/10/27/check-trend.html" rel="alternate" type="text/html" title="[trend search] 한 주간 개발과 관련된 내용을 모아서 정리해보자" /><published>2020-10-27T00:00:00+09:00</published><updated>2020-10-27T00:00:00+09:00</updated><id>https://gelato7673.github.io/myblog/2020/10/27/check-trend</id><content type="html" xml:base="https://gelato7673.github.io/myblog/2020/10/27/check-trend.html">&lt;h3 id=&quot;trend-search&quot;&gt;Trend search?!&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;한 주 동안 개발과 관련되서 ‘search’했던 내용들 중에, 나중에도 읽어보면 좋을 것 같은 내용들을 잘 정리해 두어야지.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이런 마음으로 시작하게 된 게시물 이다. 이름은 거창하지만, 굳이말하자면 한주간의 주제별 스크랩 자료랄까.&lt;/p&gt;

&lt;p&gt;trend라는 말이 들어간건, 그래도 웹 개발의 빠른 흐름을 놓치면 안되겠다는 생각에, 현재 웹trend를 반영하는 스크랩 자료들도 꼭 넣고 싶다는 하나의 바램이랄까. ^^;;&lt;/p&gt;

&lt;p&gt;그런데, 실제로는 trend를  좇기보다는 그때그때 내가 필요한 것들, 내가 알아봐야 하는 것들을 중심으로 스크랩 될 것 같다.&lt;/p&gt;

&lt;p&gt;하지만, 그때로써는 가장 최신의 내용을 스크랩 할 것이고, 매주 그렇게 알아보다보면 나름대로 새로운 trend에 관해 캐치 될 테니까 매주 이 렇게 정리하는 일 자체가 나름대로 trend를 좇는 방법이지 않을까 하고 위안삼아 본다.&lt;/p&gt;

&lt;p&gt;일단, 이번페이지에서는 ‘트렌드’를 위주로 살펴볼 수 있는 사이트 들을 정리해두고, 이 부분은 추후에도 계속 추가해 나가야 할 것 같다. (즐겨 찾기 목록은 늘 바뀌니까 ^^;;) 한주간 주간 스크랩은 다음글에서 따로 올리기로~&lt;/p&gt;

&lt;h3 id=&quot;웹-트렌드-어디에서-알아볼까&quot;&gt;웹 트렌드. 어디에서 알아볼까?&lt;/h3&gt;

&lt;h4 id=&quot;youtube&quot;&gt;Youtube&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCUpJs89fSBXNolQGOYKn0YQ&quot;&gt;Nomad coder&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;웹 트렌드에 관한 게시물들이 꽤 올라오는데, 인상적인 것들이 있었다. 
만약, 강의가 듣고 싶다면 Nomad coder 홈페이지로 이동해서 들을 수 있다. 무료강의도 간혹 있고, 무엇보다 challenge코스가 있으니 참고하시길.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCQ2DWm5Md16Dc3xRwwhVE7Q&quot;&gt;EO&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;Enterpreneurship &amp;amp; Opportunities 라는 이름의 채널, 스타트업이나 새로운 사업등에 도전한 사람들의 이야기가 많이 올라오고, 그러다보니 자연스럽게 스타트업에서 일하는 개발자들의 이야기를 들을 수 있다.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;medium&quot;&gt;Medium&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;https://medium.com/&quot;&gt;Medium&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;아직 무엇을 딱히 구독해서 읽는 정도는 아니고, 그냥 전반적으로 검색해서 읽는중&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;facebook&quot;&gt;facebook&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com&quot;&gt;Facebook&lt;/a&gt;
:아직 소개할만큼 적극적으로 활동하는 커뮤니티는 없지만, 그래도 전반적으로 읽는듯&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;기술-블로그&quot;&gt;기술 블로그&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://woowabros.github.io/techcourse/2020/10/06/woowacourse.html&quot;&gt;우아한 형제들&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/daangn&quot;&gt;당근마켓&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.kakao.com/blog/&quot;&gt;kakao tech&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://d2.naver.com/home&quot;&gt;Naver D2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;코딩교육-사이트&quot;&gt;코딩교육 사이트&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;https://opentutorials.org/course/1&quot;&gt;생활코딩&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;가끔 들여다 보면, 꼭 필요하다고 생각하는 것들의 강의는 꾸준히 업데이트 되는 편.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="githubpage" /><summary type="html">Trend search?!</summary></entry><entry><title type="html">[clone-coding] 웹 어플리케이션 만들기(구버전) -생활코딩</title><link href="https://gelato7673.github.io/myblog/2020/10/27/check-clone-webapplication.html" rel="alternate" type="text/html" title="[clone-coding] 웹 어플리케이션 만들기(구버전) -생활코딩" /><published>2020-10-27T00:00:00+09:00</published><updated>2020-10-27T00:00:00+09:00</updated><id>https://gelato7673.github.io/myblog/2020/10/27/check-clone-webapplication</id><content type="html" xml:base="https://gelato7673.github.io/myblog/2020/10/27/check-clone-webapplication.html">&lt;p&gt;###&lt;/p&gt;</content><author><name></name></author><category term="webapplication" /><summary type="html">###</summary></entry></feed>